Strategy及其子类为组件提供一系列可重用的算法，从而使类型在 运行时 方便地根据需要在各个算法之间进行切换。
Strategy模式提供条件判断语句以外的另一种选择，消除条件判断语句，就是在解耦合。含有许多条件判断语句的代码通常都需要Strategy模式。
如果Strategy对象没有实例变量，那么各个上下文可以共享同一个Strategy对象，从而节省对象开销。

strategy对性能上有一定的优化。
若存在大段的if {}else{}代码，往往实际只使用其中一个条件成立时的内容。 该方法会使得大量代码被加载到cpu或内存中，甚至是虚拟内存。
而strategy很好的避免的 垃圾代码 的调用。子类虚函数实现的就是需要使用的代码，而不包含ifelse中其他冗余内容。
